SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';
SET default_table_access_method = "heap";
COMMENT ON SCHEMA "public" IS 'standard public schema';

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";
CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";
CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE TABLE IF NOT EXISTS "public"."users" (
    "id" bigint NOT NULL,
    "name" "text",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."users" OWNER TO "postgres";

ALTER TABLE "public"."users" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."users_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_pkey" PRIMARY KEY ("id");

GRANT ALL ON TABLE "public"."users" TO "anon";
GRANT ALL ON TABLE "public"."users" TO "authenticated";
GRANT ALL ON TABLE "public"."users" TO "service_role";

GRANT ALL ON SEQUENCE "public"."users_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."users_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."users_id_seq" TO "service_role";

CREATE TABLE IF NOT EXISTS "public"."characters" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text",
    "hability" smallint NOT NULL,
    "lang" "text" DEFAULT 'cat'::"text" NOT NULL
);

ALTER TABLE "public"."characters" OWNER TO "postgres";

ALTER TABLE "public"."characters" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."characters_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."characters"
    ADD CONSTRAINT "characters_pkey" PRIMARY KEY ("id");

GRANT ALL ON TABLE "public"."characters" TO "anon";
GRANT ALL ON TABLE "public"."characters" TO "authenticated";
GRANT ALL ON TABLE "public"."characters" TO "service_role";

GRANT ALL ON SEQUENCE "public"."characters_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."characters_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."characters_id_seq" TO "service_role";

CREATE TABLE IF NOT EXISTS "public"."bot_logs" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "data" "jsonb",
    "lang" "text",
    "type" "text",
    "title" "text"
);

ALTER TABLE "public"."bot_logs" OWNER TO "postgres";

ALTER TABLE "public"."bot_logs" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."bot_logs_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."bot_logs"
    ADD CONSTRAINT "bot_logs_pkey" PRIMARY KEY ("id");

GRANT ALL ON TABLE "public"."bot_logs" TO "anon";
GRANT ALL ON TABLE "public"."bot_logs" TO "authenticated";
GRANT ALL ON TABLE "public"."bot_logs" TO "service_role";

GRANT ALL ON SEQUENCE "public"."bot_logs_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."bot_logs_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."bot_logs_id_seq" TO "service_role";

CREATE TABLE IF NOT EXISTS "public"."games_chats" (
    "id" bigint NOT NULL,
    "chat_id" bigint,
    "user_id" bigint,
    "punctuation" numeric,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "character_id" bigint,
    "time" numeric,
    "lang" "text" DEFAULT 'cat'::"text" NOT NULL
);

ALTER TABLE "public"."games_chats" OWNER TO "postgres";

ALTER TABLE "public"."games_chats" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."games_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."games_chats"
    ADD CONSTRAINT "games_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."games_chats"
    ADD CONSTRAINT "games_chats_character_id_fkey" FOREIGN KEY ("character_id") REFERENCES "public"."characters"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."games_chats"
    ADD CONSTRAINT "games_chats_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."users"("id");

GRANT ALL ON TABLE "public"."games_chats" TO "anon";
GRANT ALL ON TABLE "public"."games_chats" TO "authenticated";
GRANT ALL ON TABLE "public"."games_chats" TO "service_role";

GRANT ALL ON SEQUENCE "public"."games_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."games_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."games_id_seq" TO "service_role";

CREATE TABLE IF NOT EXISTS "public"."front_logs" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "error" "text",
    "type" "text",
    "details" "jsonb",
    "user_id" bigint
);

ALTER TABLE "public"."front_logs" OWNER TO "postgres";

ALTER TABLE "public"."front_logs" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."front_logs_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."front_logs"
    ADD CONSTRAINT "front_logs_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."front_logs"
    ADD CONSTRAINT "front_logs_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."users"("id") ON DELETE CASCADE;

GRANT ALL ON TABLE "public"."front_logs" TO "anon";
GRANT ALL ON TABLE "public"."front_logs" TO "authenticated";
GRANT ALL ON TABLE "public"."front_logs" TO "service_role";

GRANT ALL ON SEQUENCE "public"."front_logs_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."front_logs_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."front_logs_id_seq" TO "service_role";

CREATE TABLE IF NOT EXISTS "public"."characters_chats" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "chat_id" bigint,
    "character_id" bigint NOT NULL
);

ALTER TABLE "public"."characters_chats" OWNER TO "postgres";

ALTER TABLE "public"."characters_chats" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."characters_chats_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."characters_chats"
    ADD CONSTRAINT "characters_chats_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."characters_chats"
    ADD CONSTRAINT "characters_chats_character_id_fkey" FOREIGN KEY ("character_id") REFERENCES "public"."characters"("id");

GRANT ALL ON TABLE "public"."characters_chats" TO "anon";
GRANT ALL ON TABLE "public"."characters_chats" TO "authenticated";
GRANT ALL ON TABLE "public"."characters_chats" TO "service_role";

GRANT ALL ON SEQUENCE "public"."characters_chats_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."characters_chats_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."characters_chats_id_seq" TO "service_role";

CREATE TABLE IF NOT EXISTS "public"."trophies_chats" (
    "id" bigint NOT NULL,
    "user_id" bigint,
    "trophy_id" smallint,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "chat_id" bigint,
    "lang" "text" DEFAULT 'cat'::"text" NOT NULL
);

ALTER TABLE "public"."trophies_chats" OWNER TO "postgres";

ALTER TABLE "public"."trophies_chats" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."trophies_chats_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."trophies_chats"
    ADD CONSTRAINT "trophies_chats_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."trophies_chats"
    ADD CONSTRAINT "trophies_chats_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."users"("id");

GRANT ALL ON TABLE "public"."trophies_chats" TO "anon";
GRANT ALL ON TABLE "public"."trophies_chats" TO "authenticated";
GRANT ALL ON TABLE "public"."trophies_chats" TO "service_role";

GRANT ALL ON SEQUENCE "public"."trophies_chats_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."trophies_chats_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."trophies_chats_id_seq" TO "service_role";

CREATE OR REPLACE FUNCTION "public"."get_unique_chat_ids"("lang_param" "text") RETURNS SETOF bigint
    LANGUAGE "plpgsql"
    AS $$
BEGIN
  RETURN QUERY
    SELECT DISTINCT gc.chat_id
    FROM games_chats gc
    WHERE gc.chat_id IS NOT NULL
      AND gc.lang = lang_param
    ORDER BY gc.chat_id;
END;
$$;

ALTER FUNCTION "public"."get_unique_chat_ids"("lang_param" "text") OWNER TO "postgres";

GRANT ALL ON FUNCTION "public"."get_unique_chat_ids"("lang_param" "text") TO "anon";
GRANT ALL ON FUNCTION "public"."get_unique_chat_ids"("lang_param" "text") TO "authenticated";
GRANT ALL ON FUNCTION "public"."get_unique_chat_ids"("lang_param" "text") TO "service_role";

CREATE OR REPLACE VIEW "public"."unique_games" AS
 SELECT ("array_agg"("gc"."id" ORDER BY "gc"."created_at" DESC))[1] AS "id",
    "gc"."user_id",
    "u"."name" AS "user_name",
    "gc"."lang",
    ("array_agg"("gc"."punctuation" ORDER BY "gc"."created_at" DESC))[1] AS "punctuation",
    ("array_agg"("gc"."time" ORDER BY "gc"."created_at" DESC))[1] AS "time",
    "max"("gc"."created_at") AS "created_at",
    (("gc"."created_at" AT TIME ZONE 'Europe/Madrid'::"text"))::"date" AS "created_at_date",
    "array_agg"(DISTINCT "gc"."chat_id") AS "chats_id"
   FROM ("public"."games_chats" "gc"
     JOIN "public"."users" "u" ON (("u"."id" = "gc"."user_id")))
  WHERE ("gc"."character_id" IS NULL)
  GROUP BY "gc"."user_id", "u"."name", ((("gc"."created_at" AT TIME ZONE 'Europe/Madrid'::"text"))::"date"), "gc"."lang";

ALTER VIEW "public"."unique_games" OWNER TO "postgres";

GRANT ALL ON TABLE "public"."unique_games" TO "anon";
GRANT ALL ON TABLE "public"."unique_games" TO "authenticated";
GRANT ALL ON TABLE "public"."unique_games" TO "service_role";

CREATE OR REPLACE VIEW "public"."user_game_totals_by_lang" AS
 SELECT "ug"."user_id",
    "u"."name" AS "user_name",
    "ug"."lang",
    "count"(*) AS "games_count",
    "sum"("ug"."punctuation") AS "total_points",
    "avg"("ug"."time") AS "avg_time",
    "min"("ug"."created_at") AS "first_game_at",
    "max"("ug"."created_at") AS "last_game_at"
   FROM ("public"."unique_games" "ug"
     JOIN "public"."users" "u" ON (("u"."id" = "ug"."user_id")))
  GROUP BY "ug"."user_id", "u"."name", "ug"."lang";

ALTER VIEW "public"."user_game_totals_by_lang" OWNER TO "postgres";

GRANT ALL ON TABLE "public"."user_game_totals_by_lang" TO "anon";
GRANT ALL ON TABLE "public"."user_game_totals_by_lang" TO "authenticated";
GRANT ALL ON TABLE "public"."user_game_totals_by_lang" TO "service_role";

CREATE OR REPLACE VIEW "public"."chat_player_stats" WITH ("security_invoker"='on') AS
 WITH "player_chat_details" AS (
         SELECT "games_chats"."chat_id",
            "games_chats"."user_id",
            "u"."name" AS "username",
            "min"("games_chats"."created_at") AS "first_message",
            "max"("games_chats"."created_at") AS "last_message",
            "count"("games_chats"."id") AS "message_count"
           FROM ("public"."games_chats"
             LEFT JOIN "public"."users" "u" ON (("games_chats"."user_id" = "u"."id")))
          WHERE ("games_chats"."chat_id" IS NOT NULL)
          GROUP BY "games_chats"."chat_id", "games_chats"."user_id", "u"."name"
        ), "chat_stats" AS (
         SELECT "player_chat_details"."chat_id",
            "count"(DISTINCT "player_chat_details"."user_id") AS "total_players",
            "count"(DISTINCT
                CASE
                    WHEN (("player_chat_details"."last_message")::"date" = CURRENT_DATE) THEN "player_chat_details"."user_id"
                    ELSE NULL::bigint
                END) AS "players_today",
            "min"("player_chat_details"."first_message") AS "first_chat_date",
            "max"("player_chat_details"."last_message") AS "last_chat_date",
            "jsonb_agg"("jsonb_build_object"('user_id', "player_chat_details"."user_id", 'username', "player_chat_details"."username", 'first_message', "player_chat_details"."first_message", 'last_message', "player_chat_details"."last_message", 'message_count', "player_chat_details"."message_count", 'active_today', (("player_chat_details"."last_message")::"date" = CURRENT_DATE)) ORDER BY "player_chat_details"."user_id") AS "chat_members"
           FROM "player_chat_details"
          GROUP BY "player_chat_details"."chat_id"
        )
 SELECT "chat_id",
    "total_players",
    "players_today",
    "round"((((COALESCE("players_today", (0)::bigint))::numeric * 100.0) / (NULLIF("total_players", 0))::numeric), 2) AS "today_percentage",
    "first_chat_date",
    "last_chat_date",
    "age"("last_chat_date", "first_chat_date") AS "chat_duration",
    "chat_members"
   FROM "chat_stats"
  ORDER BY "total_players" DESC;

ALTER VIEW "public"."chat_player_stats" OWNER TO "postgres";

GRANT ALL ON TABLE "public"."chat_player_stats" TO "anon";
GRANT ALL ON TABLE "public"."chat_player_stats" TO "authenticated";
GRANT ALL ON TABLE "public"."chat_player_stats" TO "service_role";

CREATE OR REPLACE VIEW "public"."players_no_game_today" WITH ("security_invoker"='on') AS
 SELECT "id",
    "name",
    "created_at"
   FROM "public"."users" "u"
  WHERE ((EXISTS ( SELECT 1
           FROM "public"."games_chats" "gc"
          WHERE ("gc"."user_id" = "u"."id"))) AND (NOT (EXISTS ( SELECT 1
           FROM "public"."games_chats" "gc2"
          WHERE (("gc2"."user_id" = "u"."id") AND (("gc2"."created_at")::"date" = CURRENT_DATE))))));

ALTER VIEW "public"."players_no_game_today" OWNER TO "postgres";

GRANT ALL ON TABLE "public"."players_no_game_today" TO "anon";
GRANT ALL ON TABLE "public"."players_no_game_today" TO "authenticated";
GRANT ALL ON TABLE "public"."players_no_game_today" TO "service_role";

CREATE POLICY "Everyone can add logs" ON "public"."bot_logs" FOR INSERT WITH CHECK (true);

ALTER TABLE "public"."bot_logs" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Enable read access for all users" ON "public"."characters" FOR SELECT USING (true);

ALTER TABLE "public"."characters" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Enable delete for EVERYONE" ON "public"."characters_chats" FOR DELETE USING (true);
CREATE POLICY "Enable insert access for all users" ON "public"."characters_chats" FOR INSERT WITH CHECK (true);
CREATE POLICY "Enable read access for all users" ON "public"."characters_chats" FOR SELECT USING (true);

ALTER TABLE "public"."characters_chats" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Enable insert for all users" ON "public"."front_logs" FOR INSERT WITH CHECK (true);
CREATE POLICY "Enable write access for all users" ON "public"."front_logs" FOR INSERT WITH CHECK (true);

ALTER TABLE "public"."front_logs" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Enable read access for all users" ON "public"."games_chats" FOR SELECT USING (true);
CREATE POLICY "Enable write access for all users" ON "public"."games_chats" FOR INSERT WITH CHECK (true);

ALTER TABLE "public"."games_chats" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Enable read access for all users" ON "public"."trophies_chats" FOR SELECT USING (true);
CREATE POLICY "Enable write access for all users" ON "public"."trophies_chats" FOR INSERT WITH CHECK (true);

ALTER TABLE "public"."trophies_chats" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Enable insert for all users" ON "public"."users" FOR INSERT WITH CHECK (true);
CREATE POLICY "Enable read access for all users" ON "public"."users" FOR SELECT USING (true);

ALTER TABLE "public"."users" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "service_role";

RESET ALL;
